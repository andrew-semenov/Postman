{
	"info": {
		"_postman_id": "66cd7460-9e04-4a61-a5ef-9642a95f1df8",
		"name": "restful-booker.herokuapp.com",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "4561543"
	},
	"item": [
		{
			"name": "Create token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonResponse = pm.response.json()\r",
							"pm.collectionVariables.set(\"authToken\", jsonResponse.token)\r",
							"\r",
							"pm.test(\"Token created\", () => {\r",
							"    if(jsonResponse) return true\r",
							"    pm.expect(jsonResponse.json).to.be.a('string')\r",
							"})"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"baseUrl\", \"https://restful-booker.herokuapp.com\")"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\" : \"admin\",\r\n    \"password\" : \"password123\"\r\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/auth",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"auth"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create booking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const res = pm.response.json()\r",
							"pm.collectionVariables.set(\"bookingId\", res.bookingid)\r",
							"\r",
							"pm.test(\"Booking created\", () => {\r",
							"    const booking = pm.collectionVariables.get(\"booking\")\r",
							"    const expectedBooking = JSON.parse(booking)\r",
							"    const actualBooking = res.booking\r",
							"    pm.expect(expectedBooking).to.eql(actualBooking)\r",
							"})"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const booking = {\r",
							"    \"firstname\": \"Jim\",\r",
							"    \"lastname\": \"Brown\",\r",
							"    \"totalprice\": 111,\r",
							"    \"depositpaid\": true,\r",
							"    \"bookingdates\": {\r",
							"        \"checkin\": \"2018-01-01\",\r",
							"        \"checkout\": \"2019-01-01\"\r",
							"    },\r",
							"    \"additionalneeds\": \"Breakfast\"\r",
							"}\r",
							"\r",
							"pm.collectionVariables.set(\"booking\", JSON.stringify(booking))"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{booking}}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/booking",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"booking"
					]
				}
			},
			"response": []
		},
		{
			"name": "Partial update booking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Booking partially updated\", () => {\r",
							"    const expectedBooking = pm.collectionVariables.get(\"expectedPartiallyUpdatedBooking\")\r",
							"    const actualBooking = pm.response.json()\r",
							"    pm.expect(expectedBooking).to.eql(actualBooking)\r",
							"})"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const firstname = \"Bob\"\r",
							"const lastname = \"Garris\" \r",
							"\r",
							"const booking = {\r",
							"    \"firstname\": firstname,\r",
							"    \"lastname\": lastname,\r",
							"    \"totalprice\": 111,\r",
							"    \"depositpaid\": true,\r",
							"    \"bookingdates\": {\r",
							"        \"checkin\": \"2018-01-01\",\r",
							"        \"checkout\": \"2019-01-01\"\r",
							"    },\r",
							"    \"additionalneeds\": \"Breakfast\"\r",
							"}\r",
							"\r",
							"pm.collectionVariables.set(\"firstname\", firstname)\r",
							"pm.collectionVariables.set(\"lastname\", lastname)\r",
							"pm.collectionVariables.set(\"expectedPartiallyUpdatedBooking\", booking)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "Cookie",
						"value": "token={{authToken}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstname\": \"{{firstname}}\",\r\n    \"lastname\": \"{{lastname}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/booking/{{bookingId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"booking",
						"{{bookingId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete booking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Booking deleted\", () => {\r",
							"    const result = pm.response.text()\r",
							"    pm.expect(\"Created\").to.eql(result)\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Cookie",
						"value": "token={{authToken}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/booking/{{bookingId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"booking",
						"{{bookingId}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": ""
		},
		{
			"key": "authToken",
			"value": ""
		},
		{
			"key": "booking",
			"value": ""
		},
		{
			"key": "bookingId",
			"value": ""
		},
		{
			"key": "firstname",
			"value": ""
		},
		{
			"key": "lastname",
			"value": ""
		},
		{
			"key": "expectedPartiallyUpdatedBooking",
			"value": ""
		}
	]
}